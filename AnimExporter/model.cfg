class CfgSkeletons
{
	class plane_animexp_skeleton
	{
		pivotsModel="";
		isDiscrete = 0;
		skeletonInherit = "";
		skeletonBones[] =
		{
			"objPlane_base","",
			"objPlane","objPlane_base"
		};
	};
};

class CfgModels
{
	class plane_example
	{
		skeletonName	= "plane_animexp_skeleton";
		sectionsInherit = "";
		sections[] 		= {};

		class Animations
		{
			#define TOTAL_FRAMES (160/5)
			#define FRAME(fr) (fr/TOTAL_FRAMES)
			#define TRANSFORM_TRANSLATION(obj_name,sourceName,frame_no,length,aPosX,aPosY,aPosZ,aDirX,aDirY,aDirZ) \
			class ##obj_name##_trans_##frame_no## \
			{\
				type		= direct;\
				source		= sourceName;\
				selection	= obj_name##_base;\
				axisPos[]	= {aPosX,aPosY,aPosZ};\
				axisDir[]	= {-aDirX,-aDirY,aDirZ};\
				angle		= 0;\
				axisOffset	= -length;\
				minValue	= (frame_no-1)/TOTAL_FRAMES;\
				maxValue	= (frame_no)/TOTAL_FRAMES;\
			};
			#define TRANSFORM_ROTATION(obj_name,sourceName,frame_no,rotAng,aPosX,aPosY,aPosZ,aDirX,aDirY,aDirZ) \
			class ##obj_name##_rot_##frame_no## \
			{\
				type		= direct;\
				source		= sourceName;\
				selection	= obj_name;\
				axisPos[]	= {aPosX,aPosY,aPosZ};\
				axisDir[]	= {-aDirX,-aDirY,aDirZ};\
				angle		= rotAng;\
				axisOffset	= 0;\
				minValue	= (frame_no-1)/TOTAL_FRAMES;\
				maxValue	= (frame_no)/TOTAL_FRAMES;\
			};
			#include "exportedAnims_plane.hpp"
		};
	};

};